#N canvas 555 83 934 706 12;
#X obj 14 12 cnv 19 900 45 empty empty WitMotion\ BWT901CL\ Decoder\ for\ IEM\ SceneRotator 3 12 0 18 #606060 #ffffff 0;
#X text 798 39 Peter Venus 2023;
#X obj 13 243 cnv 19 500 150 empty empty recieve\ messages\ from\ sensor/\ create\ list\ from\ every\ new\ message 2 12 0 12 #e0e0e0 #404040 0;
#X obj 44 345 spigot 0;
#X obj 44 307 tgl 19 0 empty empty print\ incoming\ msg 0 -10 0 12 #faff00 #000000 #000000 0 1;
#N canvas 235 143 552 638 tester 0;
#X obj 20 94 inlet;
#X obj 20 560 outlet;
#X msg 20 133 20 0 113 162 248 71 164 85 89 127 52 124 255 237 0 70 139 154 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 124 255 237 0 70 139 154 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 123 255 237 0 70 139 153 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 123 255 237 0 70 139 153 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 124 255 237 0 70 139 154 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 123 255 237 0 70 139 153 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 123 255 237 0 70 139 153 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 123 255 237 0 70 139 153 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 123 255 237 0 70 139 153 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 124 255 237 0 70 139 154 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 124 255 237 0 70 139 154 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 123 255 237 0 70 139 153 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 124 255 237 0 70 139 154 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 124 255 237 0 70 139 154 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 124 255 237 0 70 139 154 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 124 255 237 0 70 139 154 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 123 255 237 0 70 139 153 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 123 255 237 0 70 139 153 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 124 255 237 0 70 139 154 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 123 255 237 0 70 139 153 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 123 255 237 0 70 139 153 85 83 151 255 20 0 113 162 248 71 164 85 89 127 52 123 255 237 0 70 139;
#X obj 20 536 drip 100;
#X text 19 53 This subpatch simulates a stream of data received by the sensor \;;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X restore 310 309 pd tester with zexy/drip;
#X obj 44 369 print COM;
#X obj 310 283 bng 19 250 50 0 empty empty message\ tester 25 12 0 12 #ff8300 #000000 #000000;
#X obj 313 402 cnv 19 290 75 empty empty retreive\ angles 2 12 0 12 #c6ffc7 #404040 0;
#X obj 333 423 bng 20 250 50 0 empty empty RESET\ ANGLE 22 10 0 12 #00ff04 #000000 #000000;
#X text 12 66 This Patch documents a possible solution to decode the messages sent from a WItMotion BWT901 Bluetooth 9-DOF sensor \; Settings to the sensor like Baudrate and type of transmitted messages have to be done (so far) with the MiniMU software provided by WitMotion \; This patch is specifically made to communicate with the SceneRotator-plugin of the IEM Plugin Suite \; [which can be found at plugins.iem.at] At the time of writing sensor documentation can be found at https://www.wit-motion.com/9-axis/wt901blecl-mpu9250-high-precision.html;
#X obj 523 243 cnv 19 390 150 empty empty Comport\ settings:\ select\ correct\ comport\ with\ radio 2 12 0 12 #e0e0e0 #404040 0;
#X msg 540 341 devices;
#X msg 690 341 baud 115200;
#X msg 610 341 open \$1;
#X obj 610 286 hradio 19 1 0 8 empty empty select\ comport\ number 0 -10 0 12 #ffffff #000000 #000000 0;
#X obj 540 286 loadbang;
#X obj 610 310 t b f;
#X obj 187 281 receive \$0-com;
#X obj 540 367 send \$0-com;
#N canvas 745 462 662 300 getMessage 0;
#X obj 17 69 sel 85;
#X obj 56 125 list prepend;
#X obj 196 154 t l;
#X text 196 118 create lists from stream of numbers until "85" starts new msg \;;
#X text 74 70 "85" starts new line/every new msg Starts with 0x55(85);
#X text 374 216 2nd byte defines msg-role \; 89 == Quaternion (q1 \, q2 \, q3 \, q4);
#X obj 17 26 inlet;
#X obj 56 182 route 83 89, f 47;
#X obj 56 226 send \$0-angle;
#X obj 219 226 send \$0-quaternions;
#X connect 0 0 1 1;
#X connect 0 1 1 0;
#X connect 1 0 2 0;
#X connect 1 0 7 0;
#X connect 2 0 1 1;
#X connect 6 0 0 0;
#X connect 7 0 8 0;
#X connect 7 1 9 0;
#X restore 187 369 pd getMessage quaternions subpatch;
#N canvas 866 81 898 554 angle 0;
#X obj 44 151 list length;
#X obj 44 126 t l l;
#X obj 44 175 == 9;
#X obj 44 233 list;
#X obj 44 199 sel 1;
#X msg 345 281 \$5 \$6;
#X obj 345 330 / 32768;
#X obj 194 330 / 32768;
#X msg 194 281 \$3 \$4;
#X obj 345 306 expr (($f2<<8)|$f1);
#X obj 194 306 expr (($f2<<8)|$f1);
#X obj 44 330 / 32768;
#X obj 44 306 expr (($f2<<8)|$f1);
#X msg 44 281 \$1 \$2;
#X obj 44 354 * 180;
#X obj 194 354 * 180;
#X obj 345 354 * 180;
#X text 92 172 as new msg need to "build up" from a single element to their full length (9 in this case) \, the full msg will only be forwarded \, if length == 9 is true;
#X obj 509 306 cnv 19 360 20 empty empty expr-calculations\ according\ to\ sensor\ documentation 2 12 0 12 #ffe3c6 #000000 0;
#X text 148 232 the first 6 elements of the list carry the necessary information to retreive the angles;
#X obj 44 99 r \$0-angle;
#X floatatom 496 451 5 0 0 3 YAW/Z - - 0;
#X floatatom 270 451 5 0 0 3 Pitch/Y - - 0;
#X floatatom 44 451 5 0 0 3 Roll/X - - 0;
#N canvas 571 377 999 311 reset 0;
#X obj 38 42 inlet;
#X obj 238 44 inlet;
#X obj 463 43 inlet;
#X obj 511 117 f;
#X obj 468 90 t f f;
#X obj 468 141 - 0;
#X obj 468 212 wrap;
#X obj 468 188 / 360;
#X obj 468 290 outlet;
#X obj 281 117 f;
#X obj 238 90 t f f;
#X obj 238 141 - 0;
#X obj 238 212 wrap;
#X obj 238 188 / 360;
#X obj 238 290 outlet;
#X obj 81 117 f;
#X obj 38 90 t f f;
#X obj 38 141 - 0;
#X obj 38 212 wrap;
#X obj 38 188 / 360;
#X obj 38 290 outlet;
#X obj 238 164 - 180;
#X obj 564 43 inlet reset;
#X obj 38 266 + 180;
#X obj 38 164 - 180;
#X obj 468 164 - 180;
#X obj 468 236 * -360;
#X obj 468 266 + 180;
#X obj 238 236 * -360;
#X obj 38 236 * -360;
#X obj 238 266 + 180;
#X connect 0 0 16 0;
#X connect 1 0 10 0;
#X connect 2 0 4 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 4 1 3 1;
#X connect 5 0 25 0;
#X connect 6 0 26 0;
#X connect 7 0 6 0;
#X connect 9 0 11 1;
#X connect 10 0 11 0;
#X connect 10 1 9 1;
#X connect 11 0 21 0;
#X connect 12 0 28 0;
#X connect 13 0 12 0;
#X connect 15 0 17 1;
#X connect 16 0 17 0;
#X connect 16 1 15 1;
#X connect 17 0 24 0;
#X connect 18 0 29 0;
#X connect 19 0 18 0;
#X connect 21 0 13 0;
#X connect 22 0 3 0;
#X connect 22 0 9 0;
#X connect 22 0 15 0;
#X connect 23 0 20 0;
#X connect 24 0 19 0;
#X connect 25 0 7 0;
#X connect 26 0 27 0;
#X connect 27 0 8 0;
#X connect 28 0 30 0;
#X connect 29 0 23 0;
#X connect 30 0 14 0;
#X restore 44 402 pd reset axis mechanism subpatch;
#X f 65;
#X obj 90 450 outlet Roll;
#X obj 317 451 outlet Pitch;
#X obj 544 451 outlet YAW;
#X obj 496 354 inlet reset;
#X text 43 24 ######################################################## \; This subpatch creates the euler angles from the received HEX-Bytes \; ######################################################## \;;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 1 1 3 1;
#X connect 2 0 4 0;
#X connect 3 0 5 0;
#X connect 3 0 8 0;
#X connect 3 0 13 0;
#X connect 4 0 3 0;
#X connect 5 0 9 0;
#X connect 6 0 16 0;
#X connect 7 0 15 0;
#X connect 8 0 10 0;
#X connect 9 0 6 0;
#X connect 10 0 7 0;
#X connect 11 0 14 0;
#X connect 12 0 11 0;
#X connect 13 0 12 0;
#X connect 14 0 24 0;
#X connect 15 0 24 1;
#X connect 16 0 24 2;
#X connect 20 0 1 0;
#X connect 24 0 23 0;
#X connect 24 0 25 0;
#X connect 24 1 22 0;
#X connect 24 1 26 0;
#X connect 24 2 21 0;
#X connect 24 2 27 0;
#X connect 28 0 24 3;
#X restore 333 450 pd angle conversion subpatch;
#X obj 13 402 cnv 19 290 75 empty empty OSC\ CONNECTION 2 12 0 12 #c6feff #404040 0;
#X obj 24 425 tgl 19 0 empty empty Connect/Disconnect 22 10 0 12 #00faff #000000 #000000 0 1;
#N canvas 182 182 450 300 OSC_localhost 0;
#X obj 20 83 inlet;
#X obj 20 257 netsend -u -b;
#X obj 20 107 sel 0 1;
#X msg 20 228 disconnect;
#X obj 124 228 receive \$0-OSC-out;
#X msg 43 186 connect localhost \$1;
#X obj 43 155 f 9999;
#X obj 251 51 tgl 18 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X floatatom 200 51 6 0 0 0 Port-$ - - 0;
#X obj 200 4 loadbang;
#X msg 200 28 9999;
#X obj 200 74 t f b;
#X connect 0 0 2 0;
#X connect 1 0 7 0;
#X connect 2 0 3 0;
#X connect 2 1 6 0;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 5 0;
#X connect 8 0 11 0;
#X connect 9 0 10 0;
#X connect 10 0 8 0;
#X connect 11 0 6 1;
#X connect 11 1 3 0;
#X coords 0 -1 1 1 250 20 1 20 50;
#X restore 24 449 pd OSC_localhost;
#X obj 333 515 pack f f f, f 32;
#X obj 333 572 oscformat SceneRotator ypr;
#X msg 333 539 \$3 \$2 \$1;
#X obj 333 668 send \$0-OSC-out;
#X obj 429 476 t b f;
#X obj 526 478 t b f;
#X obj 187 310 comport 6 115200;
#X obj 186 405 vradio 19 1 0 2 \$0-TypeSelector dummyType empty 0 -10 0 12 #fcfcfc #000000 #000000 0;
#X obj 206 405 cnv 18 50 18 empty empty Angle 2 10 0 12 #c6feff #000000 0;
#X obj 206 424 cnv 18 50 18 empty empty Quaternions 2 10 0 12 #c6feff #000000 0;
#X obj 396 595 r \$0-TypeSelector;
#X obj 396 619 == 0;
#X obj 333 646 spigot 1;
#X obj 614 95 cnv 19 300 110 empty empty empty 20 12 0 12 #ffc7c6 #404040 0;
#X text 623 104 TODO \; -Quaternions seem to be mixed \; What is their correct order? \; How are Q1-Q4 related to qW \, qX \, qY \, qZ? \; \; Perceived change in Z/YAW angle is \; rather big: Reason?;
#X text 497 56 This Patch requires the following libraries to be installed via DEKEN \; - comport \; - zexy;
#X text 409 540 re-order angles;
#X connect 3 0 6 0;
#X connect 4 0 3 1;
#X connect 7 0 5 0;
#X connect 9 0 21 0;
#X connect 12 0 19 0;
#X connect 13 0 19 0;
#X connect 14 0 19 0;
#X connect 15 0 17 0;
#X connect 16 0 12 0;
#X connect 17 0 13 0;
#X connect 17 1 14 0;
#X connect 18 0 31 0;
#X connect 21 0 25 0;
#X connect 21 1 29 0;
#X connect 21 2 30 0;
#X connect 23 0 24 0;
#X connect 25 0 27 0;
#X connect 26 0 37 0;
#X connect 27 0 26 0;
#X connect 29 0 25 0;
#X connect 29 1 25 1;
#X connect 30 0 25 0;
#X connect 30 1 25 2;
#X connect 31 0 3 0;
#X connect 31 0 20 0;
#X connect 35 0 36 0;
#X connect 36 0 37 1;
#X connect 37 0 28 0;
